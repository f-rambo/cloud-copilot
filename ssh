#!/bin/bash

SYSTEM=$(uname -s)
ARCH=$(uname -m)
OCEAN_VERSION=$1
SHIP_VERSION=$2

# Check if versions are provided
if [ -z "$OCEAN_VERSION" ] || [ -z "$SHIP_VERSION" ]; then
    echo "Usage: $0 <OCEAN_VERSION> <SHIP_VERSION>"
    exit 1
fi

install_tools() {
    if [ -f /etc/debian_version ]; then
        apt update
        apt install -y curl tar || { echo "Failed to install tools"; exit 1; }
    elif [ -f /etc/redhat-release ]; then
        yum update -y
        yum install -y curl tar || { echo "Failed to install tools"; exit 1; }
    else
        echo "unknown system type"
        exit 1
    fi
}

install_tools

OCEAN_GITHUB_URL="https://github.com/f-rambo/ocean/releases/download/${OCEAN_VERSION}/${SYSTEM}-${ARCH}-ocean-${OCEAN_VERSION}.tar.gz"
SHIP_GITHUB_URL="https://github.com/f-rambo/ship/releases/download/${SHIP_VERSION}/${SYSTEM}-${ARCH}-ship-${SHIP_VERSION}.tar.gz"

OCEAN_TARGET_DIR="/app/ocean"
SHIP_TARGET_DIR="/app/ship"

OCEAN_REPO_PATH=/tmp/ocean-repository.tar.gz
SHIP_REPO_PATH=/tmp/ship-repository.tar.gz

curl -L $OCEAN_GITHUB_URL -o $OCEAN_REPO_PATH || { echo "Failed to download ocean"; exit 1; }
curl -L $SHIP_GITHUB_URL -o $SHIP_REPO_PATH || { echo "Failed to download ship"; exit 1; }

mkdir -p $OCEAN_TARGET_DIR || { echo "Failed to create ocean target directory"; exit 1; }
mkdir -p $SHIP_TARGET_DIR || { echo "Failed to create ship target directory"; exit 1; }

tar -xzvf $OCEAN_REPO_PATH -C $OCEAN_TARGET_DIR --strip-components=1 || { echo "Failed to extract ocean"; exit 1; }
tar -xzvf $SHIP_REPO_PATH -C $SHIP_TARGET_DIR --strip-components=1 || { echo "Failed to extract ship"; exit 1; }

cd $OCEAN_TARGET_DIR || { echo "Failed to change directory to ocean target"; exit 1; }

./bin/ocean -conf ./configs/ || { echo "Failed to start ocean"; exit 1; }