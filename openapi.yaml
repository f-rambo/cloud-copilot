# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1alpha1/app:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_Get
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: name
                  in: query
                  schema:
                    type: string
                - name: state
                  in: query
                  schema:
                    type: string
                - name: app_type_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.App'
        delete:
            tags:
                - AppInterface
            operationId: AppInterface_Delete
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: name
                  in: query
                  schema:
                    type: string
                - name: state
                  in: query
                  schema:
                    type: string
                - name: app_type_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/deploy:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_GetAppDeployed
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: release_name
                  in: query
                  schema:
                    type: string
                - name: app_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
                - name: chart
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: project_id
                  in: query
                  schema:
                    type: string
                - name: user_id
                  in: query
                  schema:
                    type: string
                - name: namespace
                  in: query
                  schema:
                    type: string
                - name: config
                  in: query
                  schema:
                    type: string
                - name: state
                  in: query
                  schema:
                    type: string
                - name: is_test
                  in: query
                  schema:
                    type: boolean
                - name: manifest
                  in: query
                  schema:
                    type: string
                - name: notes
                  in: query
                  schema:
                    type: string
                - name: user_name
                  in: query
                  schema:
                    type: string
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: logs
                  in: query
                  schema:
                    type: string
                - name: create_time
                  in: query
                  schema:
                    type: string
                - name: update_time
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.DeployApp'
        post:
            tags:
                - AppInterface
            operationId: AppInterface_DeployApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.DeployAppReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.DeployApp'
        delete:
            tags:
                - AppInterface
            operationId: AppInterface_DeleteDeployedApp
            parameters:
                - name: app_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: project_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: release_name
                  in: query
                  schema:
                    type: string
                - name: namespace
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
                - name: app_type_id
                  in: query
                  schema:
                    type: string
                - name: repo_id
                  in: query
                  schema:
                    type: string
                - name: config
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/deploy/list:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_ListDeployedApp
            parameters:
                - name: app_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: project_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: release_name
                  in: query
                  schema:
                    type: string
                - name: namespace
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
                - name: app_type_id
                  in: query
                  schema:
                    type: string
                - name: repo_id
                  in: query
                  schema:
                    type: string
                - name: config
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.DeployAppList'
    /api/v1alpha1/app/deploy/resources:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_GetDeployedAppResources
            parameters:
                - name: app_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: project_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: release_name
                  in: query
                  schema:
                    type: string
                - name: namespace
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
                - name: app_type_id
                  in: query
                  schema:
                    type: string
                - name: repo_id
                  in: query
                  schema:
                    type: string
                - name: config
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.DeployAppResources'
    /api/v1alpha1/app/list:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_List
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: name
                  in: query
                  schema:
                    type: string
                - name: state
                  in: query
                  schema:
                    type: string
                - name: app_type_id
                  in: query
                  schema:
                    type: string
                - name: version_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.AppList'
    /api/v1alpha1/app/ping:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_Ping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/repo:
        post:
            tags:
                - AppInterface
            operationId: AppInterface_SaveRepo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.AppHelmRepo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
        delete:
            tags:
                - AppInterface
            operationId: AppInterface_DeleteRepo
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/repo/app/detail:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_GetAppDetailByRepo
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.App'
    /api/v1alpha1/app/repo/apps:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_GetAppsByRepo
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: app_name
                  in: query
                  schema:
                    type: string
                - name: version
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.AppList'
    /api/v1alpha1/app/repo/list:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_ListRepo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.AppHelmRepoList'
    /api/v1alpha1/app/save:
        post:
            tags:
                - AppInterface
            operationId: AppInterface_Save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.App'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/stop:
        post:
            tags:
                - AppInterface
            operationId: AppInterface_StopApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.DeployAppReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/test:
        post:
            tags:
                - AppInterface
            operationId: AppInterface_AppTest
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.DeployAppReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.DeployApp'
    /api/v1alpha1/app/type:
        post:
            tags:
                - AppInterface
            operationId: AppInterface_CreateAppType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.AppType'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
        delete:
            tags:
                - AppInterface
            operationId: AppInterface_DeleteAppType
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /api/v1alpha1/app/type/list:
        get:
            tags:
                - AppInterface
            operationId: AppInterface_ListAppType
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.AppTypeList'
    /api/v1alpha1/app/upload:
        post:
            tags:
                - AppInterface
            operationId: AppInterface_UploadApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.FileUploadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.App'
    /api/v1alpha1/cluster:
        get:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_Get
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: nodeId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
        post:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_Save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
        delete:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_Delete
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: nodeId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /api/v1alpha1/cluster/list:
        get:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_List
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.ClusterList'
    /api/v1alpha1/cluster/mock:
        get:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_GetClusterMockData
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
    /api/v1alpha1/cluster/node:
        post:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_AddNode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster.v1alpha1.ClusterID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
        delete:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_DeleteNode
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: nodeId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /api/v1alpha1/cluster/node/remove:
        delete:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_RemoveNode
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: nodeId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /api/v1alpha1/cluster/ping:
        get:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_Ping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /api/v1alpha1/cluster/setup:
        post:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_SetUpCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster.v1alpha1.ClusterID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /api/v1alpha1/cluster/uninstall:
        delete:
            tags:
                - ClusterInterface
            operationId: ClusterInterface_UninstallCluster
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: nodeId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /api/v1alpha1/project:
        get:
            tags:
                - ProjectService
            operationId: ProjectService_Get
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1alpha1.Project'
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1alpha1.Project'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1alpha1.Msg'
        delete:
            tags:
                - ProjectService
            operationId: ProjectService_Delete
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1alpha1.Msg'
    /api/v1alpha1/project/list:
        get:
            tags:
                - ProjectService
            operationId: ProjectService_List
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
                - name: cluster_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1alpha1.ProjectList'
    /api/v1alpha1/project/ping:
        get:
            tags:
                - ProjectService
            operationId: ProjectService_Ping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1alpha1.Msg'
    /api/v1alpha1/service/ping:
        get:
            tags:
                - ServiceInterface
            operationId: ServiceInterface_Ping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Msg'
    /api/v1alpha1/user:
        get:
            tags:
                - UserInterface
            operationId: UserInterface_GetUserInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1alpha1.User'
    /api/v1alpha1/user/signin:
        post:
            tags:
                - UserInterface
            operationId: UserInterface_SignIn
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1alpha1.SignIn'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1alpha1.User'
    /api/v1alpha1/user/signout:
        get:
            tags:
                - UserInterface
            operationId: UserInterface_SignOut
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1alpha1.Msg'
components:
    schemas:
        app.v1alpha1.App:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                icon:
                    type: string
                app_type_id:
                    type: string
                app_type_name:
                    type: string
                versions:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.AppVersion'
                update_time:
                    type: string
        app.v1alpha1.AppDeployedResource:
            type: object
            properties:
                name:
                    type: string
                kind:
                    type: string
                events:
                    type: array
                    items:
                        type: string
                started_at:
                    type: string
                status:
                    type: array
                    items:
                        type: string
        app.v1alpha1.AppHelmRepo:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                url:
                    type: string
                description:
                    type: string
        app.v1alpha1.AppHelmRepoList:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.AppHelmRepo'
        app.v1alpha1.AppList:
            type: object
            properties:
                itemCount:
                    type: integer
                    format: int32
                pageCount:
                    type: integer
                    format: int32
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.App'
        app.v1alpha1.AppType:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        app.v1alpha1.AppTypeList:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.AppType'
        app.v1alpha1.AppVersion:
            type: object
            properties:
                id:
                    type: string
                appId:
                    type: string
                app_name:
                    type: string
                chart:
                    type: string
                version:
                    type: string
                config:
                    type: string
                description:
                    type: string
                readme:
                    type: string
                state:
                    type: string
                test_result:
                    type: string
                metadata:
                    $ref: '#/components/schemas/app.v1alpha1.Metadata'
        app.v1alpha1.Dependency:
            type: object
            properties:
                name:
                    type: string
                version:
                    type: string
                repository:
                    type: string
                condition:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                import_values:
                    type: array
                    items:
                        type: string
                alias:
                    type: string
        app.v1alpha1.DeployApp:
            type: object
            properties:
                id:
                    type: string
                release_name:
                    type: string
                app_id:
                    type: string
                version_id:
                    type: string
                version:
                    type: string
                chart:
                    type: string
                cluster_id:
                    type: string
                project_id:
                    type: string
                user_id:
                    type: string
                namespace:
                    type: string
                config:
                    type: string
                state:
                    type: string
                is_test:
                    type: boolean
                manifest:
                    type: string
                notes:
                    type: string
                user_name:
                    type: string
                app_name:
                    type: string
                logs:
                    type: string
                create_time:
                    type: string
                update_time:
                    type: string
        app.v1alpha1.DeployAppList:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.DeployApp'
                count:
                    type: integer
                    format: int32
        app.v1alpha1.DeployAppReq:
            type: object
            properties:
                app_id:
                    type: string
                version_id:
                    type: string
                cluster_id:
                    type: string
                project_id:
                    type: string
                id:
                    type: string
                release_name:
                    type: string
                namespace:
                    type: string
                page:
                    type: integer
                    format: int32
                page_size:
                    type: integer
                    format: int32
                app_name:
                    type: string
                version:
                    type: string
                app_type_id:
                    type: string
                repo_id:
                    type: string
                config:
                    type: string
        app.v1alpha1.DeployAppResources:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.AppDeployedResource'
        app.v1alpha1.FileUploadRequest:
            type: object
            properties:
                icon:
                    type: string
                fileName:
                    type: string
                chunk:
                    type: string
                resume:
                    type: boolean
                finish:
                    type: boolean
        app.v1alpha1.Maintainer:
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                url:
                    type: string
        app.v1alpha1.Metadata:
            type: object
            properties:
                name:
                    type: string
                home:
                    type: string
                sources:
                    type: array
                    items:
                        type: string
                version:
                    type: string
                description:
                    type: string
                keywords:
                    type: array
                    items:
                        type: string
                maintainers:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.Maintainer'
                icon:
                    type: string
                api_version:
                    type: string
                condition:
                    type: string
                tags:
                    type: string
                app_version:
                    type: string
                deprecated:
                    type: boolean
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                kube_version:
                    type: string
                dependencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.Dependency'
                type:
                    type: string
        app.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        cluster.v1alpha1.Cluster:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                server_version:
                    type: string
                api_server_address:
                    type: string
                config:
                    type: string
                addons:
                    type: string
                state:
                    type: string
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/cluster.v1alpha1.Node'
                logs:
                    type: string
        cluster.v1alpha1.ClusterID:
            type: object
            properties:
                id:
                    type: string
                nodeId:
                    type: string
        cluster.v1alpha1.ClusterList:
            type: object
            properties:
                clusters:
                    type: array
                    items:
                        $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
        cluster.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        cluster.v1alpha1.Node:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                labels:
                    type: string
                annotations:
                    type: string
                os_image:
                    type: string
                kernel:
                    type: string
                container:
                    type: string
                kubelet:
                    type: string
                kube_proxy:
                    type: string
                internal_ip:
                    type: string
                external_ip:
                    type: string
                user:
                    type: string
                password:
                    type: string
                sudo_password:
                    type: string
                role:
                    type: string
                state:
                    type: string
                cluster_id:
                    type: string
        project.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        project.v1alpha1.Project:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                cluster_id:
                    type: string
                namespace:
                    type: string
        project.v1alpha1.ProjectList:
            type: object
            properties:
                projects:
                    type: array
                    items:
                        $ref: '#/components/schemas/project.v1alpha1.Project'
        service.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        user.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        user.v1alpha1.SignIn:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        user.v1alpha1.User:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                email:
                    type: string
                token:
                    type: string
                expHour:
                    type: integer
                    format: int32
tags:
    - name: AppInterface
    - name: ClusterInterface
    - name: ProjectService
    - name: ServiceInterface
    - name: UserInterface
