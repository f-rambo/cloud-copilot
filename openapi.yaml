# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /app/v1alpha1/save:
        put:
            tags:
                - AppService
            operationId: AppService_Save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.App'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.AppID'
    /app/v1alpha1/{clusterID}/apply/{appID}:
        put:
            tags:
                - AppService
            operationId: AppService_Apply
            parameters:
                - name: clusterID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: appID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app.v1alpha1.AppID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
        delete:
            tags:
                - AppService
            operationId: AppService_Delete
            parameters:
                - name: clusterID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: appID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Msg'
    /app/v1alpha1/{clusterID}/get:
        get:
            tags:
                - AppService
            operationId: AppService_GetApps
            parameters:
                - name: clusterID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.Apps'
    /app/v1alpha1/{clusterID}/get/{appID}:
        get:
            tags:
                - AppService
            operationId: AppService_GetApp
            parameters:
                - name: clusterID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: appID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app.v1alpha1.App'
    /cluster/v1alpha1/apply:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_Apply
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster.v1alpha1.ClusterName'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /cluster/v1alpha1/delete/{id}:
        delete:
            tags:
                - ClusterService
            operationId: ClusterService_Delete
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /cluster/v1alpha1/get:
        get:
            tags:
                - ClusterService
            operationId: ClusterService_Get
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Clusters'
    /cluster/v1alpha1/save:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_Save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cluster.v1alpha1.Msg'
    /service/v1alpha1:
        get:
            tags:
                - ServiceService
            operationId: ServiceService_GetServices
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Services'
        post:
            tags:
                - ServiceService
            operationId: ServiceService_SaveService
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/service.v1alpha1.Service'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.ServiceID'
    /service/v1alpha1/ci:
        get:
            tags:
                - ServiceService
            operationId: ServiceService_GetCIs
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.CIs'
        post:
            tags:
                - ServiceService
            operationId: ServiceService_SaveCI
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/service.v1alpha1.CI'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.CIID'
    /service/v1alpha1/ci/{id}:
        get:
            tags:
                - ServiceService
            operationId: ServiceService_DeleteCI
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Msg'
        put:
            tags:
                - ServiceService
            operationId: ServiceService_Deploy
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/service.v1alpha1.CIID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Msg'
    /service/v1alpha1/get/ocean:
        get:
            tags:
                - ServiceService
            operationId: ServiceService_GetOceanService
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Service'
    /service/v1alpha1/undeploy/{id}:
        put:
            tags:
                - ServiceService
            operationId: ServiceService_UnDeploy
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/service.v1alpha1.ServiceID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Msg'
    /service/v1alpha1/{id}:
        get:
            tags:
                - ServiceService
            operationId: ServiceService_GetService
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Service'
        delete:
            tags:
                - ServiceService
            operationId: ServiceService_DeleteService
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service.v1alpha1.Msg'
components:
    schemas:
        app.v1alpha1.App:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
                repoName:
                    type: string
                repoUrl:
                    type: string
                chartName:
                    type: string
                version:
                    type: string
                config:
                    type: string
                secret:
                    type: string
                namespace:
                    type: string
                clusterID:
                    type: integer
                    format: int32
        app.v1alpha1.AppID:
            type: object
            properties:
                clusterID:
                    type: integer
                    format: int32
                appID:
                    type: integer
                    format: int32
        app.v1alpha1.Apps:
            type: object
            properties:
                apps:
                    type: array
                    items:
                        $ref: '#/components/schemas/app.v1alpha1.App'
        app.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        cluster.v1alpha1.Cluster:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                clusterName:
                    type: string
                config:
                    type: string
                addons:
                    type: string
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/cluster.v1alpha1.Node'
                applyed:
                    type: boolean
        cluster.v1alpha1.ClusterName:
            type: object
            properties:
                name:
                    type: string
        cluster.v1alpha1.Clusters:
            type: object
            properties:
                clusters:
                    type: array
                    items:
                        $ref: '#/components/schemas/cluster.v1alpha1.Cluster'
        cluster.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        cluster.v1alpha1.Node:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                host:
                    type: string
                name:
                    type: string
                user:
                    type: string
                password:
                    type: string
                sudoPassword:
                    type: string
                role:
                    type: array
                    items:
                        type: string
        service.v1alpha1.CI:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                version:
                    type: string
                branch:
                    type: string
                tag:
                    type: string
                args:
                    type: object
                    additionalProperties:
                        type: string
                description:
                    type: string
                serviceId:
                    type: integer
                    format: int32
                workflowName:
                    type: string
        service.v1alpha1.CIID:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
        service.v1alpha1.CIs:
            type: object
            properties:
                CIs:
                    type: array
                    items:
                        $ref: '#/components/schemas/service.v1alpha1.CI'
        service.v1alpha1.Msg:
            type: object
            properties:
                Reason:
                    type: integer
                    format: enum
                Message:
                    type: string
        service.v1alpha1.Port:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                ingressPath:
                    type: string
                containerPort:
                    type: integer
                    format: int32
        service.v1alpha1.Service:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
                repo:
                    type: string
                registry:
                    type: string
                registryUser:
                    type: string
                registryPwd:
                    type: string
                workflow:
                    type: string
                cis:
                    type: array
                    items:
                        $ref: '#/components/schemas/service.v1alpha1.CI'
                namespace:
                    type: string
                Replicas:
                    type: integer
                    format: int32
                cpu:
                    type: string
                limitCpu:
                    type: string
                memory:
                    type: string
                limitMemory:
                    type: string
                config:
                    type: string
                secret:
                    type: string
                ports:
                    type: array
                    items:
                        $ref: '#/components/schemas/service.v1alpha1.Port'
        service.v1alpha1.ServiceID:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
        service.v1alpha1.Services:
            type: object
            properties:
                services:
                    type: array
                    items:
                        $ref: '#/components/schemas/service.v1alpha1.Service'
tags:
    - name: AppService
    - name: ClusterService
    - name: ServiceService
