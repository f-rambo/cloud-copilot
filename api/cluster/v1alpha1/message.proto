syntax = "proto3";

package cluster.v1alpha1;

option go_package = "api/cluster/v1alpha1;v1alpha1";

message ClusterProvider {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
    bool is_cloud = 3 [json_name = "is_cloud"];
}

message ClusterProviders {
    repeated ClusterProvider cluster_providers = 1 [json_name = "cluster_providers"];
}

message ClusterStatus {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message ClusterStatuses {
    repeated ClusterStatus cluster_statuses = 1 [json_name = "cluster_statuses"];
}

message ClusterLevel {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message ClusterLevels {
    repeated ClusterLevel cluster_levels = 1 [json_name = "cluster_levels"];
}

message NodeStatus {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message NodeStatuses {
    repeated NodeStatus node_statuses = 1 [json_name = "node_statuses"];
}

message NodeGroupType {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message NodeGroupTypes {
    repeated NodeGroupType node_group_types = 1 [json_name = "node_group_types"];
}

message NodeRole {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message NodeRoles {
    repeated NodeRole node_roles = 1 [json_name = "node_roles"];
}

message ResourceType {
    int32 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message ResourceTypes {
    repeated ResourceType resource_types = 1 [json_name = "resource_types"];
}

message Regions {
    repeated Region regions = 1;
}

message Region {
    string id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
}

message ClusterSaveArgs {
    // cluster name optional
    int64 id = 1 [json_name = "id"];
    // cluster name required
    string name = 2 [json_name = "name"];
    // cluster status required
    // 'baremetal' | 'aws' | 'ali_cloud'
    string provider = 3 [json_name = "provider"]; 
    // public key required
    string public_key = 4 [json_name = "public_key"];
    // private key required
    string private_key = 5 [json_name = "private_key"];
    // access id optional
    string access_id = 6 [json_name = "access_id"];
    // access key optional
    string access_key = 7 [json_name = "access_key"];
    // region optional
    string region = 8 [json_name = "region"];
    // node username optional
    string node_username = 9 [json_name = "node_username"];
    // node start ip optional
    string node_start_ip = 10 [json_name = "node_start_ip"];
    // node end ip optional
    string node_end_ip = 11 [json_name = "node_end_ip"];
}

message ClusterRegionArgs {
    // cluster provider required
    string access_id = 1 [json_name = "access_id"];
    // cluster access key required
    string access_key = 2 [json_name = "access_key"];
    // cluster provider required
    // 'baremetal' | 'aws' | 'ali_cloud'
    string provider = 3 [json_name = "provider"];
}

message ClusterIdArgs {
    // cluster id required
    int64 id = 1 [json_name = "id"];
}

message ClusterListArgs {
    // cluster name optional
    string name = 1 [json_name = "name"];
    // page number, default is 1
    int32 page = 2 [json_name = "page"];
    // page size, default is 10, max is 100
    int32 page_size = 3 [json_name = "page_size"];
}

message ClusterList {
    repeated Cluster clusters = 1 [json_name = "clusters"];
    int64 total = 2 [json_name = "total"];
}

message Cluster {
    int64 id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
    string api_server_address = 3 [json_name = "api_server_address"];
    string status = 4 [json_name = "status"];
    string domain = 5 [json_name = "domain"];
    int32 node_number = 6 [json_name = "node_number"];
    string provider = 7 [json_name = "provider"];
    string public_key = 8 [json_name = "public_key"];
    string private_key = 9 [json_name = "private_key"];
    string region = 10 [json_name = "region"];
    string access_id = 11 [json_name = "access_id"];
    string access_key = 12 [json_name = "access_key"];
    string node_username = 13 [json_name = "node_username"];
    string node_start_ip = 14 [json_name = "node_start_ip"];
    string node_end_ip = 15 [json_name = "node_end_ip"];
    repeated Node nodes = 16 [json_name = "nodes"];
    repeated NodeGroup node_groups = 17 [json_name = "node_groups"];
    ClusterResource cluster_resource = 18 [json_name = "cluster_resource"];
}

message NodeGroup {
    string id = 1 [json_name = "id"];
    string name = 2 [json_name = "name"];
    string type = 3 [json_name = "type"];
    string os = 4 [json_name = "os"];
    string arch = 5 [json_name = "arch"];
    int32 cpu = 6 [json_name = "cpu"];
    int32 memory = 7 [json_name = "memory"];
    int32 gpu = 8 [json_name = "gpu"];
    string gpu_spec = 9 [json_name = "gpu_spec"];
    int32 system_disk_size = 10 [json_name = "system_disk_size"];
    int32 data_disk_size = 11 [json_name = "data_disk_size"];
    int32 min_size = 12 [json_name = "min_size"];
    int32 max_size = 13 [json_name = "max_size"];
    int32 target_size = 14 [json_name = "target_size"];
}

message Node {
    int64 id = 1 [json_name = "id"];
    string ip = 2 [json_name = "ip"];
    string name = 3 [json_name = "name"];
    string user = 4 [json_name = "user"];
    string role = 5 [json_name = "role"];
    string status = 6 [json_name = "status"];
    string instance_id = 7 [json_name = "instance_id"];
}

message ClusterResource {
    int32 cpu = 1 [json_name = "cpu"];
    int32 memory = 2 [json_name = "memory"];
    int32 gpu = 3 [json_name = "gpu"];
    int32 disk = 4 [json_name = "disk"];
}
