syntax = "proto3";

package cluster.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/common/error_reason.proto";
import "api/cluster/v1alpha1/message.proto";

option go_package = "api/cluster/v1alpha1;v1alpha1";

service ClusterInterface {
      rpc Ping(google.protobuf.Empty) returns (common.Msg) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/ping"
            };
      }

      rpc GetClusterTypes(google.protobuf.Empty) returns (cluster.v1alpha1.ClusterTypes) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/types"
            };
      }

      rpc GetClusterStatuses(google.protobuf.Empty) returns (cluster.v1alpha1.ClusterStatuses) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/statuses"
            };
      }

      rpc GetClusterLevels(google.protobuf.Empty) returns (cluster.v1alpha1.ClusterLevels) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/levels"
            };
      }

      rpc GetNodeRoles(google.protobuf.Empty) returns (cluster.v1alpha1.NodeRoles) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/node/roles"
            };
      }

      rpc GetNodeStatuses(google.protobuf.Empty) returns (cluster.v1alpha1.NodeStatuses) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/node/statuses"
            };
      }
      
      rpc GetNodeGroupTypes(google.protobuf.Empty) returns (cluster.v1alpha1.NodeGroupTypes) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/node/group/types"
            };
      }

      rpc GetResourceTypes(google.protobuf.Empty) returns (cluster.v1alpha1.ResourceTypes) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/resource/types"
            };
      }
      
      rpc Get(cluster.v1alpha1.ClusterIdMessge) returns (cluster.v1alpha1.Cluster) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster"
            };
      }

      rpc Save(cluster.v1alpha1.ClusterSaveArgs) returns (cluster.v1alpha1.ClusterIdMessge) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster"
              body: "*"
            };
      }

      rpc List(google.protobuf.Empty) returns (cluster.v1alpha1.ClusterList) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/list"
            };
      }

      rpc Delete(cluster.v1alpha1.ClusterIdMessge) returns (common.Msg) {
            option (google.api.http) = {
              delete: "/api/v1alpha1/cluster"
            };
      }

      rpc Start(cluster.v1alpha1.ClusterIdMessge) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster/start"
              body: "*"
            };
      }

      rpc Stop(cluster.v1alpha1.ClusterIdMessge) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster/stop"
              body: "*"
            };
      }

      rpc GetRegions(cluster.v1alpha1.ClusterIdMessge) returns (cluster.v1alpha1.Regions) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/regions"
            };
      }

      rpc PollingLogs(cluster.v1alpha1.ClusterLogsRequest) returns (cluster.v1alpha1.ClusterLogsResponse){
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster/logs"
              body: "*"
            };
      }

      rpc GetLogs(stream cluster.v1alpha1.ClusterLogsRequest) returns (stream cluster.v1alpha1.ClusterLogsResponse); 
}