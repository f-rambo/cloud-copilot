syntax = "proto3";

package cluster.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/common/error_reason.proto";
import "api/cluster/v1alpha1/message.proto";

option go_package = "api/cluster/v1alpha1;v1alpha1";

service ClusterInterface {
      rpc Ping(google.protobuf.Empty) returns (common.Msg) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/ping"
            };
      }

      rpc GetClusterProviders(google.protobuf.Empty) returns (ClusterProviders) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/providers"
            };
      }

      rpc GetClusterStatuses(google.protobuf.Empty) returns (ClusterStatuses) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/statuses"
            };
      }

      rpc GetClusterLevels(google.protobuf.Empty) returns (ClusterLevels) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/levels"
            };
      }

      rpc GetNodeRoles(google.protobuf.Empty) returns (NodeRoles) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/node/roles"
            };
      }

      rpc GetNodeStatuses(google.protobuf.Empty) returns (NodeStatuses) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/node/statuses"
            };
      }
      
      rpc GetNodeGroupTypes(google.protobuf.Empty) returns (NodeGroupTypes) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/node/group/types"
            };
      }

      rpc GetResourceTypes(google.protobuf.Empty) returns (ResourceTypes) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/resource/types"
            };
      }
      
      rpc Get(ClusterArgs) returns (Cluster) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster"
            };
      }

      rpc Save(ClusterSaveArgs) returns (Cluster) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster"
              body: "*"
            };
      }

      rpc List(ClusterArgs) returns (ClusterList) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/list"
            };
      }

      rpc Delete(ClusterArgs) returns (common.Msg) {
            option (google.api.http) = {
              delete: "/api/v1alpha1/cluster"
            };
      }

      rpc Start(ClusterArgs) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster/start"
              body: "*"
            };
      }

      rpc Stop(ClusterArgs) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/cluster/stop"
              body: "*"
            };
      }

      rpc GetRegions(ClusterRegionArgs) returns (Regions) {
            option (google.api.http) = {
              get: "/api/v1alpha1/cluster/regions"
            };
      }
}