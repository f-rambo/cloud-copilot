syntax = "proto3";

package service.v1alpha1;

option go_package = "api/service/v1alpha1;v1alpha1";

message ServiceRequest {
      int64 id = 1;
      string name = 2;
      int32 page = 3;
      int32 page_size = 4;
      int64 project_id = 5;
      int64 workspace_id = 6;
      int64 cluster_id = 7;
      int64 user_id = 8;
      string workflow_type = 9;
      int64 ci_id = 10;
      int64 cd_id = 11;
}

message Services {
      repeated Service services = 1;
      int64 total = 2;
}

message Port {
      int64 id = 1;
      string ingress_path = 2;
      string protocol = 3;
      int32 container_port = 4;
}

message Service {
      int64 id = 1;
      string name = 2;
      string code_repo = 3;
      int32 replicas = 4;
      int32 cpu = 5;
      int32 limit_cpu = 6;
      int32 gpu = 7;
      int32 limit_gpu = 8;
      int32 memory = 9;
      int32 limit_memory = 10;
      int32 disk = 11;
      int32 limit_disk = 12;
      string description = 13;
      repeated Port ports = 14;
      int64 project_id = 15;
      int64 workspace_id = 16;
      int64 cluster_id = 17;
      int64 user_id = 18;
      string username = 19;
}

message AlreadyResource {
      int32 cpu = 1;
      int32 memory = 2;
      int32 gpu = 3;
      int32 disk = 4;
}


message WorkflowRequest {
      int64 id = 1;
      string name = 2;
      int64 service_id = 3;
      string workflow_type = 4;
}

message Workflow {
      int64 id = 1;
      string name = 2;
      string namespace = 3;
      string workflow_type = 4;
      string description = 5;
      int64 service_id = 6;
      repeated WorkflowStep workflow_steps = 7;
}

message WorkflowStep {
      int64 id = 1;
      int64 workflow_id = 2;
      int32 order = 3;
      string name = 4;
      string description = 5;
      repeated WorkflowTask workflow_tasks = 6;
}

message WorkflowTask {
      int64 id = 1;
      int64 workflow_id = 2;
      int64 step_id = 3;
      string name = 4;
      int32 order = 5;
      string task = 6;
      string description = 7;
      string status = 8;
}

message ContinuousIntegrationRequest {
      int64 id = 1;
      int64 service_id = 2;
      int32 page = 3;
      int32 page_size = 4;
}

message ContinuousIntegrations {
      repeated ContinuousIntegration continuous_integrations = 1;
      int64 total = 2;
}

message ContinuousIntegration {
      int64 id = 1;
      string version = 2;
      string branch = 3;
      string tag = 4;
      string status = 5;
      string description = 6;
      int64 service_id = 7;
      int64 user_id = 8;
      string workflow_runtime = 9;
      Workflow workflow = 10;
      string logs = 11;
}

message ContinuousDeploymentRequest {
      int64 id = 1;
      int64 service_id = 2;
      int64 ci_id = 3;
      int32 page = 4;
      int32 page_size = 5;
}

message ContinuousDeployments {
      repeated ContinuousDeployment continuous_deployments = 1;
      int64 total = 2;
}

message ContinuousDeployment {
      int64 id = 1;
      int64 ci_id = 2;
      int64 service_id = 3;
      int64 user_id = 4;
      string status = 5;
      string workflow_runtime = 6;
      Workflow workflow = 7;
      string config_path = 8;
      string config = 9;
      string logs = 10;
}