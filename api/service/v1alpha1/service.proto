syntax = "proto3";

package service.v1alpha1;

import "google/api/annotations.proto";
import "api/common/error_reason.proto";
import "api/service/v1alpha1/message.proto";

option go_package = "api/service/v1alpha1;v1alpha1";

service ServiceInterface {
      rpc List(service.v1alpha1.ServiceRequest) returns (service.v1alpha1.Services) {
            option (google.api.http) = {
              get: "/api/v1alpha1/service/list"
            };
      }

      rpc Save(service.v1alpha1.Service) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/service/save"
              body: "*"
            };
      }

      rpc Get(service.v1alpha1.ServiceRequest) returns (service.v1alpha1.Service) {
            option (google.api.http) = {
              get: "/api/v1alpha1/service/get"
            };
      }

      rpc Delete(service.v1alpha1.ServiceRequest) returns (common.Msg) {
            option (google.api.http) = {
              delete: "/api/v1alpha1/service/delete"
            };
      }

      rpc GetWorkflow(service.v1alpha1.ServiceRequest) returns (service.v1alpha1.Worklfow) {
            option (google.api.http) = {
              get: "/api/v1alpha1/service/workflow"
            };
      }


      rpc SaveWorkflow(service.v1alpha1.ServiceRequest) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/service/workflow"
              body: "*"
            };
      }

      rpc CommitWorklfow(service.v1alpha1.ServiceRequest) returns (common.Msg) {
            option (google.api.http) = {
              post: "/api/v1alpha1/service/commit"
              body: "*"
            };
      }

      rpc GetServiceCis(service.v1alpha1.CIsRequest) returns (service.v1alpha1.CIsResult) {
            option (google.api.http) = {
              get: "/api/v1alpha1/service/cis"
            };
      }
}